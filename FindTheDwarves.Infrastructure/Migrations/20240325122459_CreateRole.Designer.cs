// <auto-generated />
using FindTheDwarves.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindTheDwarves.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240325122459_CreateRole")]
    partial class CreateRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Achievement", b =>
                {
                    b.Property<int>("AchievementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementID");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.AchievementDwarf", b =>
                {
                    b.Property<int>("DwarfID")
                        .HasColumnType("int");

                    b.Property<int>("AchievementID")
                        .HasColumnType("int");

                    b.HasKey("DwarfID", "AchievementID");

                    b.HasIndex("AchievementID");

                    b.ToTable("AchievementDwarf");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<int>("DwarfID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("DwarfID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Dwarf", b =>
                {
                    b.Property<int>("DwarfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DwarfID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DwarfID");

                    b.ToTable("Dwarves");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.UserAchievement", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("AchievementID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "AchievementID");

                    b.HasIndex("AchievementID");

                    b.ToTable("UserAchievement");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.UserDwarf", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("DwarfID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "DwarfID");

                    b.HasIndex("DwarfID");

                    b.ToTable("UserDwarf");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.AchievementDwarf", b =>
                {
                    b.HasOne("FindTheDwarves.Domain.Model.Achievement", "Achievement")
                        .WithMany("Dwarves")
                        .HasForeignKey("AchievementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindTheDwarves.Domain.Model.Dwarf", "Dwarf")
                        .WithMany("Achivements")
                        .HasForeignKey("DwarfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("Dwarf");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Comment", b =>
                {
                    b.HasOne("FindTheDwarves.Domain.Model.Dwarf", "Dwarf")
                        .WithMany("Comments")
                        .HasForeignKey("DwarfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindTheDwarves.Domain.Model.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Dwarf");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.User", b =>
                {
                    b.HasOne("FindTheDwarves.Domain.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.UserAchievement", b =>
                {
                    b.HasOne("FindTheDwarves.Domain.Model.Achievement", "Achievement")
                        .WithMany("Users")
                        .HasForeignKey("AchievementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindTheDwarves.Domain.Model.User", "User")
                        .WithMany("Achivements")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.UserDwarf", b =>
                {
                    b.HasOne("FindTheDwarves.Domain.Model.Dwarf", "Dwarf")
                        .WithMany("Users")
                        .HasForeignKey("DwarfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindTheDwarves.Domain.Model.User", "User")
                        .WithMany("Dwarves")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dwarf");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Achievement", b =>
                {
                    b.Navigation("Dwarves");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Dwarf", b =>
                {
                    b.Navigation("Achivements");

                    b.Navigation("Comments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FindTheDwarves.Domain.Model.User", b =>
                {
                    b.Navigation("Achivements");

                    b.Navigation("Comments");

                    b.Navigation("Dwarves");
                });
#pragma warning restore 612, 618
        }
    }
}
